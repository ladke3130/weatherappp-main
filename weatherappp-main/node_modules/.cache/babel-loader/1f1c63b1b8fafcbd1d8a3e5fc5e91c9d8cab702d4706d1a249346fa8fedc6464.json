{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sai\\\\Desktop\\\\weatherappp-main\\\\weatherappp-main\\\\src\\\\components\\\\CurrentLocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"af85b8af001d4bbb0b7822a8105b197d\";\nconst CurrentLocation = ({\n  setCity,\n  setFound,\n  fetchWeather\n}) => {\n  _s();\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n  const onSuccess = location => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      }\n    });\n  };\n  const fetchWeatherViaLocation = async e => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${location.coordinates.lat}&lon=${location.coordinates.lng}&appid=${API_KEY}`);\n      fetchWeather(response.data.name);\n      setCity(response.data.name);\n      setFound(true);\n    } catch {\n      setFound(false);\n    }\n  };\n  const onError = error => {\n    setLocation({\n      loaded: true,\n      error\n    });\n  };\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      onError({\n        code: 0,\n        message: \"Geolocation not supported\"\n      });\n    }\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: e => fetchWeatherViaLocation(),\n      children: \"Get Current location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CurrentLocation, \"3hDiZVb2uQPYqRJfdpSJpJ9Y568=\");\n_c = CurrentLocation;\nexport default CurrentLocation;\nconst Button = styled.button`\n  padding: 11px;\n  font-size: 18px;\n  border-radius: 2px;\n  border: gray solid 2px;\n  outline: none;\n  color: white;\n  background-color: #43aefc;\n  cursor: pointer;\n  width: 320px;\n`;\n_c2 = Button;\nvar _c, _c2;\n$RefreshReg$(_c, \"CurrentLocation\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"names":["React","useState","useEffect","styled","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","CurrentLocation","setCity","setFound","fetchWeather","_s","location","setLocation","loaded","coordinates","lat","lng","onSuccess","coords","latitude","longitude","fetchWeatherViaLocation","e","response","get","data","name","onError","error","navigator","code","message","geolocation","getCurrentPosition","children","Button","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","button","_c2","$RefreshReg$"],"sources":["C:/Users/sai/Desktop/weatherappp-main/weatherappp-main/src/components/CurrentLocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nconst API_KEY = \"af85b8af001d4bbb0b7822a8105b197d\";\nconst CurrentLocation = ({ setCity, setFound, fetchWeather }) => {\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: { lat: \"\", lng: \"\" },\n  });\n  const onSuccess = (location) => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      },\n    });\n  };\n\n  const fetchWeatherViaLocation = async (e) => {\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${location.coordinates.lat}&lon=${location.coordinates.lng}&appid=${API_KEY}`\n      );\n      fetchWeather(response.data.name);\n      setCity(response.data.name);\n      setFound(true);\n    } catch {\n      setFound(false);\n    }\n  };\n\n  const onError = (error) => {\n    setLocation({\n      loaded: true,\n      error,\n    });\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      onError({ code: 0, message: \"Geolocation not supported\" });\n    }\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n\n  return (\n    <>\n      <Button onClick={(e) => fetchWeatherViaLocation()}>\n        Get Current location\n      </Button>\n    </>\n  );\n};\n\nexport default CurrentLocation;\n\nconst Button = styled.button`\n  padding: 11px;\n  font-size: 18px;\n  border-radius: 2px;\n  border: gray solid 2px;\n  outline: none;\n  color: white;\n  background-color: #43aefc;\n  cursor: pointer;\n  width: 320px;\n`;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1B,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,eAAe,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IACvCgB,MAAM,EAAE,KAAK;IACbC,WAAW,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG;EAClC,CAAC,CAAC;EACF,MAAMC,SAAS,GAAIN,QAAQ,IAAK;IAC9BC,WAAW,CAAC;MACVC,MAAM,EAAE,IAAI;MACZC,WAAW,EAAE;QACXC,GAAG,EAAEJ,QAAQ,CAACO,MAAM,CAACC,QAAQ;QAC7BH,GAAG,EAAEL,QAAQ,CAACO,MAAM,CAACE;MACvB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,uBAAuB,GAAG,MAAOC,CAAC,IAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAC7B,uDAAsDb,QAAQ,CAACG,WAAW,CAACC,GAAI,QAAOJ,QAAQ,CAACG,WAAW,CAACE,GAAI,UAASX,OAAQ,EACnI,CAAC;MACDI,YAAY,CAACc,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;MAChCnB,OAAO,CAACgB,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;MAC3BlB,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,MAAM;MACNA,QAAQ,CAAC,KAAK,CAAC;IACjB;EACF,CAAC;EAED,MAAMmB,OAAO,GAAIC,KAAK,IAAK;IACzBhB,WAAW,CAAC;MACVC,MAAM,EAAE,IAAI;MACZe;IACF,CAAC,CAAC;EACJ,CAAC;EAED9B,SAAS,CAAC,MAAM;IACd,IAAI,EAAE,aAAa,IAAI+B,SAAS,CAAC,EAAE;MACjCF,OAAO,CAAC;QAAEG,IAAI,EAAE,CAAC;QAAEC,OAAO,EAAE;MAA4B,CAAC,CAAC;IAC5D;IACAF,SAAS,CAACG,WAAW,CAACC,kBAAkB,CAAChB,SAAS,EAAEU,OAAO,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzB,OAAA,CAAAE,SAAA;IAAA8B,QAAA,eACEhC,OAAA,CAACiC,MAAM;MAACC,OAAO,EAAGd,CAAC,IAAKD,uBAAuB,CAAC,CAAE;MAAAa,QAAA,EAAC;IAEnD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC,gBACT,CAAC;AAEP,CAAC;AAAC9B,EAAA,CAjDIJ,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AAmDrB,eAAeA,eAAe;AAE9B,MAAM6B,MAAM,GAAGpC,MAAM,CAAC2C,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAVIR,MAAM;AAAA,IAAAM,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}